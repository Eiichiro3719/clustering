[33, 0]
[8, 9, 14, 15, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33]

[0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 19, 21, 25, 31]


=＝処理を入れていない時の結果
[33, 0]
[9, 14, 15, 18, 20, 22, 23, 26, 27, 28, 29, 30, 32, 33]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 21, 24, 25, 31]


[0, 33]
[0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 16, 17, 21]
[8, 9, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]


入れた時の結果
[33, 0]
[8, 9, 14, 15, 18, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33]
[0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 19, 21, 25, 31]

[0, 33]
[0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17, 21, 24]
[9, 13, 14, 15, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33]



for v in G.nodes():   #-------------------cluster id set------------------
      for i in range(C):
          for j in range(i+1,C):
              if nx.dijkstra_path_length(G,v,cent[i]) < nx.dijkstra_path_length(G,v,cent[j]):
                  G.node[v]['clid']=i
                  cnode[i].append(v)
                  print "ID:",i,cnode[i]
              #elif nx.dijkstra_path_length(G,v,cent[i]) == nx.dijkstra_path_length(G,v,cent[j]):
              #    if v%2==0:
              #        G.node[v]['clid']=i
              #        cnode[i].append(v)
              #    else:
              #        G.node[v]['clid']=j
              #        cnode[j].append(v)
              else:
                  G.node[v]['clid']=j
                  cnode[j].append(v)
                  print "ID:",j,cnode[j]
